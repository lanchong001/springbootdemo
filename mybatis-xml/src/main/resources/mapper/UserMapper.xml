<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--你接口的包名是com.abc.dao,接口名是NameMapper.java，那么你的mapper.xml的namespace应该是com.abc.dao.NameMapper-->
<mapper namespace="com.lym.springboot.mybatis.xml.mapper.UserMapper">

    <!--resultMap对应的是表与实体类的映射  - type 数据库表对应的实体类，别名或完整类名都可以-->
    <resultMap id="BaseResultMap" type="com.lym.springboot.mybatis.xml.domain.User">
        <!-- 结果集的主键 -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <!-- 普通的列  -column 是数据库中字段， property是实体类中字段-->
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>

    <!--parameterType(输入类型)、resultType(输出类型)-->
    <select id="findUsers" resultMap="BaseResultMap" resultType="java.util.List">
        SELECT * FROM user
    </select>

    <select id="findUserById" parameterType="java.lang.Long" resultMap="BaseResultMap"
            resultType="com.lym.springboot.mybatis.xml.domain.User">
        SELECT * FROM user WHERE id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="saveUser" parameterType="com.lym.springboot.mybatis.xml.domain.User">
        insert into user(name,age) values (#{name,jdbcType=VARCHAR},#{age,jdbcType=INTEGER})
    </insert>

    <update id="updateUser" parameterType="com.lym.springboot.mybatis.xml.domain.User">
        update user set name = #{name,jdbcType=VARCHAR}, age = #{age,jdbcType=INTEGER} where id = #{id}
    </update>

    <delete id="delUserById" parameterType="java.lang.Long">
        delete from user where id = #{id,jdbcType=BIGINT}
    </delete>

    <select id="getCount" resultType="java.lang.Integer">
        SELECT count(*) FROM user
    </select>
</mapper>
